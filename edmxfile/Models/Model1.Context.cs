//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace edmxfile.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class testEntities5 : DbContext
    {
        public testEntities5()
            : base("name=testEntities5")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Employee1> Employees1 { get; set; }
        public virtual DbSet<Model> Models { get; set; }
        public virtual DbSet<Player> Players { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<productcustomerjoin> productcustomerjoins { get; set; }
        public virtual DbSet<Product1> Products1 { get; set; }
        public virtual DbSet<TblUser> TblUsers { get; set; }
        public virtual DbSet<testview> testviews { get; set; }
        public virtual DbSet<CompEmply> CompEmplies { get; set; }
       
        public virtual DbSet<joincompemp> joincompemps { get; set; }
    
        public virtual int Player_Delete(Nullable<int> playerId)
        {
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("PlayerId", playerId) :
                new ObjectParameter("PlayerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Player_Delete", playerIdParameter);
        }
    
        public virtual int Player_Update(Nullable<int> playerId, string name, string club, string nationality, string age)
        {
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("PlayerId", playerId) :
                new ObjectParameter("PlayerId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var clubParameter = club != null ?
                new ObjectParameter("Club", club) :
                new ObjectParameter("Club", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Player_Update", playerIdParameter, nameParameter, clubParameter, nationalityParameter, ageParameter);
        }
    
        public virtual ObjectResult<ProductCustomer_Result> ProductCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductCustomer_Result>("ProductCustomer");
        }
    
      
    
        public virtual ObjectResult<sp_getplayer_Result> sp_getplayer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getplayer_Result>("sp_getplayer");
        }
    
        public virtual int sp_insertplayer(string name, string club, string nationality, string age)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var clubParameter = club != null ?
                new ObjectParameter("club", club) :
                new ObjectParameter("club", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("nationality", nationality) :
                new ObjectParameter("nationality", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertplayer", nameParameter, clubParameter, nationalityParameter, ageParameter);
        }
    
        public virtual ObjectResult<sp_multiplestatements_Result> sp_multiplestatements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_multiplestatements_Result>("sp_multiplestatements");
        }
    
        
        public virtual ObjectResult<sp_joincompemp_Result> sp_joincompemp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_joincompemp_Result>("sp_joincompemp");
        }
    }
}
